// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Users {
    id           Int          @id @default(autoincrement())
    username     String       @unique @db.VarChar(20)
    password     String       @db.VarChar(100)
    roleId       Int
    roleName     Roles        @relation(fields: [roleId], references: [id])
    refreshToken String?      @db.VarChar(1000)
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt
    Categories   Categories[]
    Income       Income[]
    Expenses     Expenses[]
    Budget       Budget[]
}

model Roles {
    id       Int     @id @default(autoincrement())
    roleName String  @unique @db.VarChar(20)
    Users    Users[]
}

model RecordTypes {
    id         Int          @id @default(autoincrement())
    type       String       @unique @db.VarChar(10)
    Categories Categories[]
    Budget     Budget[]
}

model Categories {
    id           Int         @id @default(autoincrement())
    userId       Int
    user         Users       @relation(fields: [userId], references: [id])
    recordId     Int
    recordType   RecordTypes @relation(fields: [recordId], references: [id])
    categoryName String      @db.VarChar(30)
    Budget       Budget[]
    Income       Income[]
    Expenses     Expenses[]
}

model Income {
    id         Int        @id @default(autoincrement())
    userId     Int
    user       Users      @relation(fields: [userId], references: [id])
    date       DateTime   @db.Date
    // Set to optional relations so that deletion of categories tied to this as FK will save categoryId as null
    categoryId Int
    category   Categories @relation(fields: [categoryId], references: [id])
    amount     Decimal    @db.Decimal(10, 2)
    detail     String?    @db.VarChar(50)
    note       String?    @db.VarChar(200)
}

model Expenses {
    id         Int        @id @default(autoincrement())
    userId     Int
    user       Users      @relation(fields: [userId], references: [id])
    date       DateTime   @db.Date
    categoryId Int
    category   Categories @relation(fields: [categoryId], references: [id])
    amount     Decimal    @db.Decimal(10, 2)
    detail     String?    @db.VarChar(50)
    note       String?    @db.VarChar(200)
}

model Budget {
    id         Int         @id @default(autoincrement())
    userId     Int
    user       Users       @relation(fields: [userId], references: [id])
    categoryId Int
    category   Categories  @relation(fields: [categoryId], references: [id])
    amount     Decimal     @db.Decimal(10, 2)
    recordId   Int
    recordType RecordTypes @relation(fields: [recordId], references: [id])
    startMonth DateTime    @db.Date
    endMonth   DateTime    @db.Date
}
